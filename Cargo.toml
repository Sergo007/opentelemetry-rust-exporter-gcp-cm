[workspace]
members = ["examples/*"]

[package]
name = "opentelemetry_gcloud_monitoring_exporter"
version = "0.11.9"
description = "Provides support for exporting metrics to Google Cloud Monitoring."
readme = "README.md"
keywords = ["opentelemetry", "metrics", "exporter", "gcp", "cloud-monitoring"]
repository = "https://github.com/Sergo007/opentelemetry-rust-exporter-gcp-cm"
authors = ["Yatsina Serhii <yatsyna.sergey@gmail.com>"]
license = "Apache-2.0"
edition = "2021"
rust-version = "1.70"

[lib]
doctest = false

[features]
default = ["rt_tokio_opentelemetry_sdk_0_24", "opentelemetry_0_24", "gcp_auth"]
# default = ["tokio", "opentelemetry_0_24", "gcp_auth"]
gcp_auth = ["dep:gcp_auth"]
tokio = ["dep:tokio"]
# default = ["rt_tokio_opentelemetry_sdk_0_23", "opentelemetry_0_23", "gcp_auth"]
# default = ["rt_tokio_opentelemetry_sdk_0_22", "opentelemetry_0_22", "gcp_auth"]
# default = ["rt_tokio_opentelemetry_sdk_0_21", "opentelemetry_0_21", "gcp_auth"]
opentelemetry_0_24 = [
    "opentelemetry_0_24_pkg",
    "opentelemetry_sdk_0_24_pkg",
    "opentelemetry_resourcedetector_gcp_rust_0_11_pkg",
]
rt_tokio_opentelemetry_sdk_0_24 = [
    "tokio",
    "opentelemetry_sdk_0_24_pkg/rt-tokio",
]

opentelemetry_0_23 = [
    "opentelemetry_0_23_pkg",
    "opentelemetry_sdk_0_23_pkg",
    "opentelemetry_resourcedetector_gcp_rust_0_10_pkg",
]
rt_tokio_opentelemetry_sdk_0_23 = [
    "tokio",
    "opentelemetry_sdk_0_23_pkg/rt-tokio",
]

# todo: add the 0.22 and 0.21 features 
# now tests with 0.22 and 0.21 are failing
# opentelemetry_0_22 = [
#     "opentelemetry_0_22_pkg",
#     "opentelemetry_sdk_0_22_pkg",
#     "opentelemetry_resourcedetector_gcp_rust_0_9_pkg",
# ]
# rt_tokio_opentelemetry_sdk_0_22 = [
#     "tokio",
#     "opentelemetry_sdk_0_22_pkg/rt-tokio",
# ]

# opentelemetry_0_21 = [
#     "opentelemetry_0_21_pkg",
#     "opentelemetry_sdk_0_21_pkg",
#     "opentelemetry_resourcedetector_gcp_rust_0_8_pkg",
# ]
# rt_tokio_opentelemetry_sdk_0_21 = [
#     "tokio",
#     "opentelemetry_sdk_0_21_pkg/rt-tokio",
# ]

[dependencies]
# opentelemetry = { version = "0.24", features = ["metrics"] }
opentelemetry_0_21_pkg = { package = "opentelemetry", version = "0.21", features = [
    "metrics",
], optional = true }
opentelemetry_0_22_pkg = { package = "opentelemetry", version = "0.22", features = [
    "metrics",
], optional = true }
opentelemetry_0_23_pkg = { package = "opentelemetry", version = "0.23", features = [
    "metrics",
], optional = true }
opentelemetry_0_24_pkg = { package = "opentelemetry", version = "0.24", features = [
    "metrics",
], optional = true }

opentelemetry_sdk_0_21_pkg = { package = "opentelemetry_sdk", version = "0.21", features = [
    "metrics",
], optional = true }
opentelemetry_sdk_0_22_pkg = { package = "opentelemetry_sdk", version = "0.22", features = [
    "metrics",
], optional = true }
opentelemetry_sdk_0_23_pkg = { package = "opentelemetry_sdk", version = "0.23", features = [
    "metrics",
], optional = true }
opentelemetry_sdk_0_24_pkg = { package = "opentelemetry_sdk", version = "0.24", features = [
    "metrics",
], optional = true }
opentelemetry_resourcedetector_gcp_rust_0_8_pkg = { package = "opentelemetry_resourcedetector_gcp_rust", version = "0.8", optional = true }
opentelemetry_resourcedetector_gcp_rust_0_9_pkg = { package = "opentelemetry_resourcedetector_gcp_rust", version = "0.9", optional = true }
opentelemetry_resourcedetector_gcp_rust_0_10_pkg = { package = "opentelemetry_resourcedetector_gcp_rust", version = "0.10", optional = true }
opentelemetry_resourcedetector_gcp_rust_0_11_pkg = { package = "opentelemetry_resourcedetector_gcp_rust", version = "0.11", optional = true }

async-trait = "0.1"

# json serializer/deserializer
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
derive_more = "0.99"
# Google sdk
gcp_auth = { version = "0.12", optional = true }
# gcloud-sdk = { version = "0.25", features = ["tls-roots", "google-monitoring-v3"] }
prost = "0.13"
prost-types = "0.13"
tonic = { version = "0.12", features = [
    "gzip",
    "tls",
    "tls-roots",
    "transport",
] }

unicode-segmentation = "1.11.0"
tokio = { version = "1.0", features = [
    "fs",
    "io-util",
    "sync",
    "time",
], optional = true }
async-std = { version = "1.10", optional = true }

rand = "0.8.5"
itertools = "0.13.0"

[dependencies.darrentsung_debug_parser]
version = "0.3.1"

[dependencies.hyper]
version = "1"
features = ["client", "http2"]

[dev-dependencies]
once_cell = "1.19.0"
pretty_assertions = "1.4.0"
# todo contribute to the project to add the sorted feature
pretty_assertions_sorted_fork = { version = "0.10.0" }
tokio = { version = "1.0", features = ["full"] }
